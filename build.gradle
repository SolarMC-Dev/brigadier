plugins {
    id 'java-library'
    id 'maven-publish'
    id 'nu.studer.credentials' version '2.1'
}

group = 'gg.solarmc'
version = '1.0.20'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'com.google.guava:guava:26.0-jre'
    testImplementation 'junit:junit-dep:4.11'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation 'com.google.guava:guava-testlib:26.0-jre'
    testImplementation 'org.openjdk.jmh:jmh-core:1.21'
    annotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.21'
}

java {
    withSourcesJar()
    withJavadocJar()
}

compileJava {
    options.release = 11
    // See Gradle-17484 for bug affecting options.javaModuleVersion
    options.compilerArgs.addAll(['--module-version', project.version])
}

test {
    testLogging {
        events "failed", "skipped"
        showStandardStreams = true
        showExceptions true
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

task report {
    doLast {
        println "##teamcity[buildNumber '${project.version}']"
    }
}

publishing {
    repositories {
        maven {
            credentials {
                username project.credentials.solarRepoUser
                password project.credentials.solarRepoPassword
            }

            name = 'solar-repo'
            def base = 'https://mvn-repo.platinum-mc.com'
            def releasesRepoUrl = "$base/releases"
            def snapshotsRepoUrl = "$base/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}
